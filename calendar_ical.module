<?php
// $Id$

/**
 * @file
 * Adds ical functionality to Calendar.
 */

/**
 *  Implementation of hook_menu().
 */
function calendar_ical_menu($may_cache) {
  define('ICAL_PATH', drupal_get_path('module', 'date_api'));
  define('CALENDAR_ICAL_CACHE', 'cache');
  $items = array();
  if (!$may_cache) {
    foreach (calendar_view_types() as $view_name) {
      $view = views_get_view($view_name);
      $items[] = array('path' => $view->url . '/view',
        'title' => t('View'),
        'callback' => 'views_view_page',
        'callback arguments' => $args,
        'access' => user_access('access content'),
        'weight' => 0,
        'type' => MENU_DEFAULT_LOCAL_TASK,
      );
      $items[] = array(
        'path'     => $view->url .'/ical',
        'title'    => t('iCal'),
        'description' => t('iCal setup.'),
        'access'   => user_access('administer content'),
        'callback' => 'drupal_get_form',
        'callback arguments' => array('calendar_ical_setup_form', $view),
        'type' => MENU_LOCAL_TASK,
        'weight' => 6,
      );
    }
  }
  return $items;
}

/**
 * Implementation of hook_calendar_add_items().
 */
function calendar_ical_calendar_add_items($view) {
  return calendar_ical_add_feeds($view);
}

/**
 * Setup Calendar feeds.
 *
 * @todo - control of the stripe color is not yet implemented.
 */
function calendar_ical_setup_form($view) {

  include_once(drupal_get_path('module', 'calendar') .'/calendar.theme');
  drupal_add_css(drupal_get_path('module', 'calendar'), '/calendar.css');

  $form = array();

  for ($i = 0; $i < 10; $i++) {
    $node = new StdClass();
    $node->stripe = $i;
    $stripes[$i] = $i .'<div class="calendar" style="width:150px;">' .theme('calendar_stripe_stripe', $node) .'</div>';
  }
  $form['#suffix'] = t('<h3>Stripe options</h3>') . implode($stripes);
  $period = drupal_map_assoc(array(0, 3600, 10800, 21600, 32400, 43200, 86400, 172800, 259200, 604800, 1209600, 2419200, 4838400, 9676800), 'format_interval');
  $form['calendar_ical_expire_'. $view->name] = array(
    '#type' => 'select', '#title' => t('Expire iCal cache'),
    '#default_value' => variable_get('calendar_ical_expire_'. $view->name, 9676800), '#options' => $period,
    '#description' => t('iCal feeds are cached to improve performance. Set an expiration time for cached feeds.')
    );

  $empty_feed = array(0 => array('name' => '', 'url' => '', 'type' => 'ical', 'stripe' => 0));
  $form[$view->name] = array(
    '#type' => 'fieldset',
    '#title' => t('iCal Feeds'),
    '#description' => t('Use this section to set up iCal feeds that should be displayed in this calendar. They will be shown along with any internal items that match the calendar criteria.'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#tree' => TRUE,
    );

  // One empty input form will be added after any existing items.
  $view_feeds = array_merge((array) variable_get('calendar_feeds_'. $view->name, $empty_feed), $empty_feed);
  foreach ($view_feeds as $delta => $feed) {
    $form[$view->name][$delta] = array(
      'type' => array(
        '#title' => t('Feed type'),
        '#type' => 'hidden',
        '#value' => 'ical',
      ),
      'name' => array(
        '#title' => t('Name'),
        '#type' => 'textfield',
        '#default_value' => $feed['name'],
        '#description' => t('The name of a feed to include in this calendar.'),
       ),
      'url' => array(
        '#title' => t('Url'),
        '#type' => 'textarea',
        '#rows' => 1,
        '#default_value' => $feed['url'],
        '#description' => t('The external feed url or internal file path and name. Change \'webcal://\' to \'http://\'.'),
      ),
      'stripe' => array(
        '#title' => t('Stripe'),
        '#type' => 'select',
        '#options' => range(0, 10),
        '#default_value' => $feed['stripe'],
        '#description' => t('The color stripe to use for this feed (not working yet).'),
        '#suffix' => '<hr>',
       ),
    );
  }
  $form['view_name'] = array(
    '#type' => 'hidden',
    '#value' => $view->name,
    );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    );
  return $form;
}

/**
 * Save requested values.
 */
function calendar_ical_setup_form_submit($form_id, $form_values) {
  include_once(drupal_get_path('module', 'date_api') .'/date_ical.inc');
  $view_name = $form_values['view_name'];
  foreach ($form_values as $value_name => $value) {
    if ($value_name == 'calendar_ical_expire_'. $view_name) {
      variable_set('calendar_ical_expire_'. $view_name,  $value);
    }
    elseif (is_array($value)) {
      foreach ($value as $delta => $item) {
        // Don't save empty values.
        if (trim($item['url']) == '' || trim($item['name']) == '') {
          unset($value[$delta]);
        }
        else {
          // Don't save invalid urls.
          $events = date_ical_import($item['url']);
          if (!is_array($events)) {
            unset($value[$delta]);
          }
        }
      }
      variable_set('calendar_feeds_'. $value_name, $value);
     }
  }
  cache_clear_all('calendar_feeds_'. $view->name, CALENDAR_ICAL_CACHE, TRUE);
}

/**
 * Bring an ical feed into the calendar.
 *
 * @param $view - the view being manipulated
 * @param $refresh - whether or not to force a refresh of the feed
 * @return $nodes to add to calendar
 * @todo probably need to add more validation of the results in case the url doesn't work.
 */

function calendar_ical_add_feeds($view, $refresh = FALSE) {
  $nodes = array();
  include_once(drupal_get_path('module', 'date_api') .'/date_ical.inc');
  $feeds = variable_get('calendar_feeds_'. $view->name, array());
  foreach ($feeds as $delta => $feed) {
    if (!$refresh && $cached = cache_get('calendar_feeds_'. $view->name .':'. $feed['url'], CALENDAR_ICAL_CACHE)) {
      $nodes += (array) unserialize($cached->data);
    }
    else {
      $expire = intval(variable_get('calendar_ical_expire_'. $view->name, 9676800) + time());
      switch ($feed['type']) {
      case 'ical':
        $filename = $feed['url'];
        $events = date_ical_import($filename);
        $new_nodes = array();
        foreach ($events as $delta => $event) {
          $node = new StdClass();
          $node->nid = $event['uid'];
          $node->title = $event['summary'];
          $node->label = $feed['name'];
          $node->teaser =  strip_tags(stripslashes($event['description']));
          $node->calendar_start = $event['start'];
          $node->start_offset   = 0;
          $node->calendar_end   = $event['end'];
          $node->end_offset     = 0;
          $node->start_time_format = gmdate(variable_get('calendar_time_format', 'H:i'), $event['start']);
          $node->end_time_format = gmdate(variable_get('calendar_time_format', 'H:i'), $event['end']);
          $node->stripe = $feed['stripe'];
          $node->remote = TRUE;
          $node->url = $event['url'];
          $new_nodes[$event['uid']] = $node;
        }
        cache_set('calendar_feeds_'. $view->name .':'. $feed['url'], CALENDAR_ICAL_CACHE, serialize($new_nodes), $expire);
        $nodes += (array) $new_nodes;
        break;
      }
    }
  }
  return $nodes;
}